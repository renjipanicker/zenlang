include gui::WindowImpl native;
include gui::Widget public;
namespace Window;

public enum Style {
    Normal;
    Dialog;
};

public struct Position {
    auto x = -1;
    auto y = -1;
    auto w = -1;
    auto h = -1;
};

public struct Handle : Widget::Handle {
};

public struct Anchor {
    Handle wnd;
    string target;
    auto margin = 0;
};

public struct Definition : Widget::Definition abstract {
    auto title = "";
    auto position = Window::Position();
    auto style = Style.Normal;
    auto border = 1;
    auto visible = true;
    Anchor left;
    Anchor right;
    Anchor top;
    Anchor bottom;
};

public routine Position getWindowPosition(const Handle& wnd) native;
public routine Position getChildPosition(const Handle& wnd) native;

public function void Delete(const Handle& wnd) native;
public function void SetTitle(const Handle& wnd, const string& title) native;
public function void SetFocus(const Handle& frame, const Handle& wnd) native;
public function void Show(const Handle& wnd) native;
public function void Hide(const Handle& wnd) native;
public function void Move(const Handle& wnd, const Position position) native;
public function void Size(const Handle& wnd, const int& w, const int& h) native;

public event(const Handle& wnd) native => function void OnResize();
public event(const Handle& wnd) native => function void OnClose();
