include gui::WindowImpl native;

namespace Window;

public enum Style {
    Normal;
    Dialog;
};

public struct Position {
    x = -1;
    y = -1;
    w = -1;
    h = -1;
};

protected struct Instance {
};

public typedef ChildList dict<string,Instance>;

public struct Anchor {
    Instance window;
    string target;
    margin = 0;
};

public struct Definition {
    title = "";
    position = Window::Position{};
    style = Style.Normal;
    visible = false;
    Anchor left;
    Anchor right;
    Anchor top;
    Anchor bottom;
    dict<string, pointer<Definition> > child;
};

public routine Position getWindowPosition(const Instance& window) native;
public routine Position getChildPosition(const Instance& window) native;
public routine ChildList& childList(const Instance& window) native;

public function ()Delete(const Instance& window) native;
public function ()SetTitle(const Instance& window, const string& title) native;
public function ()Show(const Instance& window) native;
public function ()Hide(const Instance& window) native;
public function ()Move(const Instance& window, const Position& position) native;
public function ()Size(const Instance& window, const int& w, const int& h) native;

public event(const Instance& window) => function ()OnResize() native;
public event(const Instance& window) => function ()OnClose() native;
