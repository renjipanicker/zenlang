namespace Window;

public enum Style {
    Normal;
    Dialog;
};

public struct Position {
    int x = -1;
    int y = -1;
    int w = -1;
    int h = -1;
};

protected struct Instance native;

public struct Definition {
    string title;
    Position position;
    Style style = Style.Normal;
};

public routine Position getWindowPosition(const Instance& window) native;

public routine int testRoutine(const Instance& window) {
    (1>2)?1:2;
    return 12345;
}

public function (int i, string s)testFunction(const Instance& window) {
    (1 + 2) * 3;
    "xx";
    return (67890, "yy");
}

public function ()Delete(const Instance& window) native;
public function ()SetTitle(const Instance& window, const string& title) native;
public function ()Show(const Instance& window) native;
public function ()Hide(const Instance& window) native;
public function ()Move(const Instance& window, const Position& position) native;
public function ()Size(const Instance& window, const int& w, const int& h) native;

public event(const Instance& window) => function ()OnResize();
public event(const Instance& window) => function ()OnClose();


//123456
/*
Socket::OnRecv(const Instance& socket) <= function ()OnRecv(const string& data);
*/
