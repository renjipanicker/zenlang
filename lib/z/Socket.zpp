namespace z;
public interface Socket {
    event(const socket& s) native => function void OnConnect(const socket& cs);
    event(const socket& s) native => function void OnRecv(const data& d);
    event(const socket& s) native => function void OnClose();

    /// \todo These must not be in the public interface
    function OnConnectDevice : device native {|socket s, pointer<Socket::OnConnect::Handler> h|};
    function OnRecvDevice : device native {|socket s, pointer<Socket::OnRecv::Handler> h|};

    routine socket OpenServer(const int& port) native;
    routine socket OpenClient(const string& host, const string& port) native;
    routine void StartServer(const socket& s) native;
    routine void Close(const socket& s) native;

    routine size SendData(const socket& s, const data& d) native;
    routine size SendString(const socket& s, const string& d) native;
};

