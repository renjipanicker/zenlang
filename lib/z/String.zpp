namespace z;
public interface String {
    /// \brief Split the string using specified seperator
    routine list<string> Split(const string& str, const string& sep) native;

    /// \brief Fold the given string
    routine char Fold(const char& ch) native;

    /// \brief Convert Char to lowercase
    routine char CharToLower(const char& ch) native;

    /// \brief Convert String to lowercase
    routine string StringToLower(const string& str) native;

    /// \brief Convert Char to uppercase
    routine char CharToUpper(const char& ch) native;

    /// \brief Convert String to uppercase
    routine string StringToUpper(const string& str) native;

    /// \brief Convert String to long
    routine long StringToLong(const string& str) native;

    /// \brief Return true if given char is a space character
    routine bool IsSpaceChar(const char& ch) native;

    /// \brief Trim the string, return the trimmed parts
    routine string TrimStringCollect(const string& str, string& prev, string& post) native;

    /// \brief Trim the string.
    routine string TrimString(const string& str) native;

    /// \brief Get a GUID.
    routine string GetGuid() native;
};
