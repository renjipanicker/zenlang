namespace TestBasic;

public enum MyEnum {
    C1;
    C2;
};

public struct MyStruct {
    i = 0;
};
public routine int testNative(const string& s) native;

public routine int testRoutine(const int& x) {
    (1>2)?1:2;
    return 12345;
}

public function (int ri, string rs)testFunction(const int& x, const MyStruct& myStruct, const MyEnum& myEnum) {
    local i = 0;
    local s = "xx";
    local e = (1 + 2) * 3;
    local t = "yy %{x}\n" @ {"x":1};
    local l = [1,2,3];
    local d = ["a":1,"b":2,"c":3];
    local v = x;
    local m = myStruct.i;
    local r = testRoutine(123);
    return (67890, "yy");
}

public test testFunction001 {
    print "yy %{x}\n" @ {"x":1};
//    local myStruct = MyStruct[];
//    local c = testFunction(321);
    return (1);
}
